@import url("https://fonts.googleapis.com/css?family=Work+Sans:400|Space+Mono:400");
@import url("https://fonts.googleapis.com/css2?family=Inconsolata:wght@500&family=Montserrat&display=swap");
/* Define the ROOT SCOPE for the varialbes it will contain */
:root {
  /* Color Themes */
  --green: #00ebb3;
  --green2: #2cb67d;
  --red: #ff3b5b;
  --red2: #d9376e;
  --yellow: #fdf14f;
  --yellow2: #ffd803;
  --black: #1b2a45;
  --black2: #020826;
  --darkBlue: #00214d;
  --darkBlue2: #0d0d0d;
  --grey: #bfbfbf;
  --grey2: #5f6c7b;
  --lightGrey: #f2f4f6;
  --lightGrey2: #d1d1e9;
  --white: #fcfcfc;
  --white2: #fffffe;
  --dBlack: #222;

  /* Define Color Intentions */
  --primary: var(--green);
  --danger: var(--red);
  --background: var(--lightGrey);
  --textColor: var(--black);
  --buttonTextColor: var(--black);
  --lineColor: var(--grey);
  --cardBg: var(--white);
  --headerBackground: var(--darkBlue);

  /* Styles */
  --line: solid 1px var(--lineColor);

  /* Type */
  --headingFont: "Space Mono", monospace;
  --headingFont2: "Inconsolata", monospace;
  --bodyFont: "Work Sans", sans-serif;
  --bodyFont2: "Montserrat", sans-serif;
  --baseFontSize: 100%;
  --h1: 3.052rem;
  --h2: 2.441rem;
  --h3: 1.953rem;
  --h4: 1.563rem;
  --h5: 1.25rem;
  --smallText: 0.9em;

  /*  Elevation */
  --level-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --level-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --level-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --level-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);

  /*  Nav Link Elevation  */
  --navLinkLvl-1: 0 1px 0px 0 rgba(253, 241, 79, 0.5),
    0 1px 0px 0 rgba(0, 0, 0, 0.06);
  --navLinkLvl-3: 0 2px 0px 0px rgba(253, 241, 79, 0.5),
    0 2px 0px 0px rgba(0, 0, 0, 0.05);

  /*  Positioning  */
  --containerPadding: 2.5%; /* Assures the container dimension of 95% (2.5% from both sides */
  --headerHeight: 3rem;
  --borderRadius: 10px;
}

/* FROM  https://type-scale.com/  */

html {
  font-size: var(--baseFontSize); /* 100% = 16px */
  box-sizing: border-box; /* Because normal box model adds padding and border to width/height   */
} /* Set border-box for whole document. below we will make sure everything else in
                                inherits from this. SO now when we say width:100% and we have paddings applied
                                the element won't run off the screen, it will take into account the padding and 
                                give an honest 100%  */

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.65;
  background: var(--background);
  color: var(--textColor);
}

header {
  height: var(--headerHeight);
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  /* Below for display/justify-content we could certainly alternately 
     apply the .flex class (layout) we created, and just drop that class in the header element 
     in markup. However certain elements can be treated as independent entities 
     where the styling is done explicitly as done here with header */
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 var(--containerPadding);
  background: var(--headerBackground);
  color: var(--white);
  box-shadow: var(--level-3);
}

header nav a {
  color: var(--white);
  font-family: var(--headingFont);
  text-decoration: none;
  border-bottom: solid 2px var(--yellow);
  box-shadow: var(--navLinkLvl-1);
}

header nav a:hover {
  box-shadow: var(--navLinkLvl-3);
}

header nav a + a {
  margin-left: 10px;
}

footer {
  background: var(--headerBackground);
  color: var(--white);
  padding: var(--containerPadding);
  text-align: center;
}

footer nav a {
  text-decoration: none;
  padding: 3rem;
  font-size: var(--h5);
  color: var(--white);
  font-family: var(--headingFont);
}

p {
  margin-bottom: 1.15rem;
  max-width: 40em;
}

p a,
blockquote a,
ul li a {
  color: var(--textColor);
  text-decoration: none;
  border-bottom: solid 2px var(--primary);
}

h1,
h2,
h3,
h4,
h5 {
  margin: 3rem 0 1.38rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.15;
}

h1 {
  margin-top: 0;
  font-size: var(--h1);
}

h2 {
  font-size: var(--h2);
}

h3 {
  font-size: var(--h3);
}

h4 {
  font-size: var(--h4);
}

h5 {
  font-size: var(--h5);
}

small,
.text_small {
  font-size: var(--smallText);
}

/* END Type-Scale */

blockquote {
  margin: 1em;
  padding: 2em;
  background: var(--cardBg);
  box-shadow: var(--level-3);
}

label {
  display: block;
  font-size: var(--smallText);
}

input,
textarea {
  border: var(--line);
  border-radius: 4px;
  padding: 3px 5px;
}

textarea {
  width: 100%;
  height: 5rem;
}

::placeholder {
  color: var(--grey);
}

select {
  border: var(--line);
}

hr {
  border-top: var(--line);
}

/* We're going to set some 'super' properties for all of our buttons using variables */
/* By doing this we can easily detail any subsequent types/sub-sets of buttons in our app */
/* Doing this 'element-theming' also makes the code far more readable/symantic */
button {
  --buttonColor: var(--primary);

  appearance: none;
  background-color: var(--buttonColor);
  color: var(--buttonTextColor);
  border: none;
  border-radius: 10px;
  padding: 5px 25px;
  box-shadow: var(--level-1);
  transition: 0.35s ease-in-out box-shadow;
}

button:hover {
  box-shadow: var(--level-3);
}

/* Attribute for button.. disabled in this case */
button[disabled] {
  opacity: 0.4;
}

/* Instead of making a 'super' class of 'cancel', make your styling more specific to avoid potential
    conflicts with classes later on .. in this case scope this to be button element cancels. We
    do the same thing for the 'small' class of buttons below it */

button.cancel {
  --buttonColor: var(--danger);
  --buttonTextColor: var(--white);
}

button.small {
  font-size: var(--smallText);
}

/* Layout Components */

.fake-logo {
  /* Overriding the h1 element of the logo in header sec to be a little less obnoxious but
     still maintain semantic markup (h1) */
  font-size: var(--baseFontSize);
  margin: 0;
}

.layout {
  /*  Here we use a CSS calc function to add our visual preference for this component (3rem) to our already
      above-established headerHeight variable  */
  padding: calc(2rem + var(--headerHeight)) var(--containerPadding);
}

.grid {
  --gridCols: 2;
  /* We're setting display to block to work in concert with our main media query at bottom of sheet
     This will default any mobile screens to block so that everything goes in it's own block/single column */
  display: block;
  grid-template-columns: repeat(var(--gridCols), 1fr);
}

.cols-3 {
  --gridCols: 3;
}

.cols-4 {
  --gridCols: 4;
}

.grid--split {
  /* Using BEM system we inherit (done on the HTML class attribute: class="grid grid--split"
     from the grid block, and save ourselves 
     a line of code from the split class below */
  grid-template-columns: 33% 67%;
  gap: 1.5em;
}

.flex {
  --justifyContent: space-between;
  /* We're setting display to block to work in concert with our main media query at bottom of sheet 
     This will default any mobile screens to block so that everything goes in it's own block/single column */
  display: block;
  justify-content: var(--justifyContent);
}

.flex-around {
  --justifyContent: space-around;
}

.flex-center {
  --justifyContent: center;
}

/* .split {
  display: grid;
  grid-template-columns: 33% 67%;             /* Commented out to use BEM system instead with grid--split 
  gap: 1.5em;                                     But this could be used in-lieu by assigning a split class to elem
} */

/*  Custom Elements  */

.card {
  padding: 2em;
  background: var(--cardBg);
  box-shadow: var(--level-3);
  border-radius: (--borderRadius);
}

.card > *:first-child {
  /*  Anything(*) that is the immediate descendent of the card */
  margin-top: 0;
}

.card > *:last-child {
  /*  Anything that is the last descendent of the card  */
  margin-bottom: 0;
}

/*  THEMES  */

.dark {
  --cardBg: var(--dBlack);
  --background: var(--darkBlue);
  --textColor: var(--lightGrey);
  --headerBackground: var(--dBlack);
}

.dark-alt {
  --cardBg: var(--black2);
  --background: var(--darkBlue2);
  --textColor: var(--lightGrey2);
  --headerBackground: var(--black2);
}

.theme-main {
  /*  Copied from root at top  */
  /* Color Themes */
  --green: #00ebb3;
  --green2: #2cb67d;
  --red: #ff3b5b;
  --red2: #d9376e;
  --yellow: #fdf14f;
  --yellow2: #ffd803;
  --black: #1b2a45;
  --black2: #020826;
  --darkBlue: #00214d;
  --darkBlue2: #0d0d0d;
  --grey: #bfbfbf;
  --grey2: #5f6c7b;
  --lightGrey: #f2f4f6;
  --lightGrey2: #d1d1e9;
  --white: #fcfcfc;
  --white2: #fffffe;
  --dBlack: #222;

  /* Define Color Intentions */
  --primary: var(--green);
  --danger: var(--red);
  --background: var(--lightGrey);
  --textColor: var(--black);
  --buttonTextColor: var(--black);
  --lineColor: var(--grey);
  --cardBg: var(--white);
  --headerBackground: var(--darkBlue);

  /* Styles */
  --line: solid 1px var(--lineColor);

  /* Type */
  --headingFont: "Space Mono", monospace;
  --bodyFont: "Work Sans", sans-serif;
  --baseFontSize: 100%;
  --h1: 3.052rem;
  --h2: 2.441rem;
  --h3: 1.953rem;
  --h4: 1.563rem;
  --h5: 1.25rem;
  --smallText: 0.9em;

  /*  Elevation */
  --level-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --level-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --level-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --level-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);

  /*  Nav Link Elevation  */
  --navLinkLvl-1: 0 1px 0px 0 rgba(253, 241, 79, 0.5),
    0 1px 0px 0 rgba(0, 0, 0, 0.06);
  --navLinkLvl-3: 0 2px 0px 0px rgba(253, 241, 79, 0.5),
    0 2px 0px 0px rgba(0, 0, 0, 0.05);

  /*  Positioning  */
  --containerPadding: 2.5%; /* Assures the container dimension of 95% (2.5% from both sides */
  --headerHeight: 3rem;
  --borderRadius: 10px;
}

.theme-alt {
  /*  Copied from root at top  */
  /* Color Themes */
  --green: #00ebb3;
  --green2: #2cb67d;
  --red: #ff3b5b;
  --red2: #d9376e;
  --yellow: #fdf14f;
  --yellow2: #ffd803;
  --black: #1b2a45;
  --black2: #020826;
  --darkBlue: #00214d;
  --darkBlue2: #0d0d0d;
  --grey: #bfbfbf;
  --grey2: #5f6c7b;
  --lightGrey: #f2f4f6;
  --lightGrey2: #d1d1e9;
  --white: #fcfcfc;
  --white2: #fffffe;
  --dBlack: #222;

  /* Define Color Intentions */
  --primary: var(--green2);
  --danger: var(--red2);
  --background: var(--lightGrey2);
  --textColor: var(--black2);
  --buttonTextColor: var(--black2);
  --lineColor: var(--grey2);
  --cardBg: var(--white2);
  --headerBackground: var(--darkBlue2);

  /* Styles */
  --line: solid 1px var(--lineColor);

  /* Type */
  --headingFont: "Inconsolata", monospace;
  --bodyFont: "Montserrat", sans-serif;
  --baseFontSize: 100%;
  --h1: 3.052rem;
  --h2: 2.441rem;
  --h3: 1.953rem;
  --h4: 1.563rem;
  --h5: 1.25rem;
  --smallText: 0.9em;

  /*  Elevation */
  --level-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --level-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --level-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --level-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);

  /*  Nav Link Elevation  */
  --navLinkLvl-1: 0 1px 0px 0 rgba(253, 241, 79, 0.5),
    0 1px 0px 0 rgba(0, 0, 0, 0.06);
  --navLinkLvl-3: 0 2px 0px 0px rgba(253, 241, 79, 0.5),
    0 2px 0px 0px rgba(0, 0, 0, 0.05);

  /*  Positioning  */
  --containerPadding: 2.5%; /* Assures the container dimension of 95% (2.5% from both sides */
  --headerHeight: 3rem;
  --borderRadius: 10px;
}

/*  Media queries section moved to bottom of stylesheet because 
    css-specificity of these overrides
    MUST occur AFTER the hierarchical definition or 'super' */
@media only screen and (min-width: 550px) {
  /* Here we're going to set overrides for our variables and other classes based on media queries. Here 
     for anything larger than mobile (>550px) */
  :root {
    --baseFontSize: 112.5%;
  }
  .grid {
    display: grid;
  }
  .flex {
    display: flex;
  }
}
